name: Build
on:
  push:
    branches:
      - main

  pull_request:
    branches:
      - main

jobs:
  test:
    strategy:
      matrix:
        go_version:
          - 1.16
          - 1.17
        os:
          - macos
          - ubuntu
        arch:
          - 386
          - amd64
        exclude:
          - os: macos
            arch: 386

    name: tests (${{ matrix.os }}/go-${{ matrix.go_version }}-${{ matrix.arch }})
    runs-on: ${{ matrix.os }}-latest
    steps:
      - uses: actions/setup-go@v3.2.1
        id: go
        with:
          stable: false
          go-version: ${{ matrix.go_version }}

      - uses: actions/checkout@v3.0.0

      - name: install build deps (macos)
        if: ${{ matrix.os == 'macos' }}
        run: |
          brew update
          brew install coreutils redis

      - name: install build deps (ubuntu)
        if: ${{ matrix.os == 'ubuntu' }}
        run: |
          sudo apt update -y
          sudo apt install -y redis-server

      # only need to do this on macos because on Ubuntu Redis will run as a service.
      - name: start redis
        if: ${{ matrix.os == 'macos' }}
        run: |
          brew services start redis
          timeout 10 sh -c "while ! redis-cli ping; do echo waiting for redis-server to start; sleep 1; done"

      - name: run-tests-race
        if: ${{ matrix.arch == 'amd64' }}
        env:
          GOARCH: "${{ matrix.arch }}"
          REDIS_HOST: redis
        run: go test -race -vet all -mod readonly ./...

      - name: run-tests
        if: ${{ matrix.arch == '386' }}
        env:
          GOARCH: "${{ matrix.arch }}"
          REDIS_HOST: redis
        run: go test -vet all -mod readonly ./...

  lint:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3.0.0

      - uses: golangci/golangci-lint-action@v3.1.0

  build-artifact:
    name: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3.0.0

      - uses: actions/setup-go@v3.2.1
        id: go
        with:
          go-version: 1.17

      - name: go-build
        run: go build -o video-transcoding-api
        env:
          CGO_ENABLED: 0

  unblock-pr:
    name: unblock-pr
    runs-on: ubuntu-latest
    needs:
      - build-artifact
      - lint
      - test
    steps:
      - run: "true"

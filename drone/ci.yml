---
# DO NOT MODIFY - AUTO GENERATED

kind: pipeline
name: go-1.14.2

platform:
  os: linux
  arch: amd64

workspace:
  base: /go
  path: video-transcoding-api

steps:
- name: mod-download
  image: golang:1.14.2
  commands:
  - go mod download
  depends_on:
  - clone

- name: coverage
  image: golang:1.14.2
  commands:
  - apt update
  - apt install -y redis-server
  - redis-server &>/dev/null &
  - timeout 10 sh -c "while ! redis-cli ping; do echo waiting for redis-server to start; sleep 1; done"
  - make gocoverage
  depends_on:
  - mod-download

- name: lint
  image: golangci/golangci-lint:v1.25.0
  commands:
  - make runlint
  depends_on:
  - mod-download

- name: build
  image: golang:1.14.2
  commands:
  - make build
  environment:
    CGO_ENABLED: 0
  when:
    event:
    - pull_request
    - push
    - tag
  depends_on:
  - mod-download

- name: test-dockerfile
  image: plugins/docker
  settings:
    dry_run: true
    repo: videodev/video-transcoding-api
  when:
    event:
    - push
    - pull_request
  depends_on:
  - clone

- name: test-ci-dockerfile
  image: plugins/docker
  settings:
    dockerfile: drone/Dockerfile
    dry_run: true
    repo: videodev/video-transcoding-api
  when:
    event:
    - pull_request
  depends_on:
  - build

- name: build-and-push-to-dockerhub
  image: plugins/docker
  settings:
    auto_tag: true
    dockerfile: drone/Dockerfile
    password:
      from_secret: docker_password
    repo: videodev/video-transcoding-api
    username:
      from_secret: docker_username
  when:
    ref:
    - refs/tags/*
    - refs/heads/master
  depends_on:
  - coverage
  - lint
  - build

- name: goreleaser
  image: goreleaser/goreleaser
  commands:
  - git fetch --tags
  - goreleaser release
  environment:
    GITHUB_TOKEN:
      from_secret: github_token
  when:
    event:
    - tag
  depends_on:
  - coverage
  - lint

---
kind: pipeline
name: go-1.13.10

platform:
  os: linux
  arch: amd64

workspace:
  base: /go
  path: video-transcoding-api

steps:
- name: mod-download
  image: golang:1.13.10
  commands:
  - go mod download
  depends_on:
  - clone

- name: coverage
  image: golang:1.13.10
  commands:
  - apt update
  - apt install -y redis-server
  - redis-server &>/dev/null &
  - timeout 10 sh -c "while ! redis-cli ping; do echo waiting for redis-server to start; sleep 1; done"
  - make gocoverage
  depends_on:
  - mod-download

- name: lint
  image: golangci/golangci-lint:v1.25.0
  commands:
  - make runlint
  depends_on:
  - mod-download

- name: build
  image: golang:1.13.10
  commands:
  - make build
  environment:
    CGO_ENABLED: 0
  when:
    event:
    - pull_request
    - push
    - tag
  depends_on:
  - mod-download

...
